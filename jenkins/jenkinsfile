pipeline {
    agent {
        label "cimachine"   
    }
    options {
        timeout(time: 1, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '1')) 
    }
    parameters {
        string(name: 'Branch', defaultValue: 'master', description: 'GitHub Branch Name')
        string(name: 'ImageName', defaultValue: 'sample', description: 'Provide Docker Image Name')
        string(name: 'ImageTag', defaultValue: 'latest', description: 'Docker ImageTag')
    }
    environment {
       SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
      stage("App Code Checkout"){
        steps{ 
          git branch: "${params.Branch}", url:'https://github.com/prateekkumawat/jenkins-weekend-repo.git'
        }
      }  
      stage('Sonar Analysis') { 
        steps {
          dir('app/'){
            withSonarQubeEnv('sonar-server'){
                sh ''' $SCANNER_HOME/bin/sonar-scanner \
                      -Dsonar.projectName=docker-spring-image-builder \
                      -Dsonar.projectKey=docker-spring-image-builder '''
            }
          }
        }
      }
      stage('Quality gate') {
        steps {
          script {
            waitForQualityGate abortPipeline: false, credentialsId: 'sonar-server-token'
          }
        }
      }
      stage("Build Docker Image") {
        steps {
            sh "docker build -t ${params.ImageName}:${params.ImageTag} . " 
        }  
      }
    }
}